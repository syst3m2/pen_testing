12 5Te8Y4drgCRfCx8ugdwuEX8KFC6k2EUu
13 8ZjyCRiBWFYkneahHwxCv3wb2a1ORpYL

14 
ssh -i sshkey.private bandit14@localhost
4wcYUJFw0k0XLShlDzztnTBHiqxU3b3e

15
nc localhost 30000
BfMYroe26WYalil77FoDi9qh59eK5xNr

16
openssl s_client -connect localhost:30001
cluFn7wTiGryunymYOu4RcffSxQluehd

17
Correct!
-----BEGIN RSA PRIVATE KEY-----
MIIEogIBAAKCAQEAvmOkuifmMg6HL2YPIOjon6iWfbp7c3jx34YkYWqUH57SUdyJ
imZzeyGC0gtZPGujUSxiJSWI/oTqexh+cAMTSMlOJf7+BrJObArnxd9Y7YT2bRPQ
Ja6Lzb558YW3FZl87ORiO+rW4LCDCNd2lUvLE/GL2GWyuKN0K5iCd5TbtJzEkQTu
DSt2mcNn4rhAL+JFr56o4T6z8WWAW18BR6yGrMq7Q/kALHYW3OekePQAzL0VUYbW
JGTi65CxbCnzc/w4+mqQyvmzpWtMAzJTzAzQxNbkR2MBGySxDLrjg0LWN6sK7wNX
x0YVztz/zbIkPjfkU1jHS+9EbVNj+D1XFOJuaQIDAQABAoIBABagpxpM1aoLWfvD
KHcj10nqcoBc4oE11aFYQwik7xfW+24pRNuDE6SFthOar69jp5RlLwD1NhPx3iBl
J9nOM8OJ0VToum43UOS8YxF8WwhXriYGnc1sskbwpXOUDc9uX4+UESzH22P29ovd
d8WErY0gPxun8pbJLmxkAtWNhpMvfe0050vk9TL5wqbu9AlbssgTcCXkMQnPw9nC
YNN6DDP2lbcBrvgT9YCNL6C+ZKufD52yOQ9qOkwFTEQpjtF4uNtJom+asvlpmS8A
vLY9r60wYSvmZhNqBUrj7lyCtXMIu1kkd4w7F77k+DjHoAXyxcUp1DGL51sOmama
+TOWWgECgYEA8JtPxP0GRJ+IQkX262jM3dEIkza8ky5moIwUqYdsx0NxHgRRhORT
8c8hAuRBb2G82so8vUHk/fur85OEfc9TncnCY2crpoqsghifKLxrLgtT+qDpfZnx
SatLdt8GfQ85yA7hnWWJ2MxF3NaeSDm75Lsm+tBbAiyc9P2jGRNtMSkCgYEAypHd
HCctNi/FwjulhttFx/rHYKhLidZDFYeiE/v45bN4yFm8x7R/b0iE7KaszX+Exdvt
SghaTdcG0Knyw1bpJVyusavPzpaJMjdJ6tcFhVAbAjm7enCIvGCSx+X3l5SiWg0A
R57hJglezIiVjv3aGwHwvlZvtszK6zV6oXFAu0ECgYAbjo46T4hyP5tJi93V5HDi
Ttiek7xRVxUl+iU7rWkGAXFpMLFteQEsRr7PJ/lemmEY5eTDAFMLy9FL2m9oQWCg
R8VdwSk8r9FGLS+9aKcV5PI/WEKlwgXinB3OhYimtiG2Cg5JCqIZFHxD6MjEGOiu
L8ktHMPvodBwNsSBULpG0QKBgBAplTfC1HOnWiMGOU3KPwYWt0O6CdTkmJOmL8Ni
blh9elyZ9FsGxsgtRBXRsqXuz7wtsQAgLHxbdLq/ZJQ7YfzOKU4ZxEnabvXnvWkU
YOdjHdSOoKvDQNWu6ucyLRAWFuISeXw9a/9p7ftpxm0TSgyvmfLF2MIAEwyzRqaM
77pBAoGAMmjmIJdjp+Ez8duyn3ieo36yrttF5NSsJLAbxFpdlc1gvtGCWW+9Cq0b
dxviW8+TFVEBl1O4f7HVm6EpTscdDxU+bCXWkfjuRb7Dy9GOtt9JPsX8MBTakzh3
vBgsyi/sN3RqRBcGU40fOoZyfAMT8s1m/uYv52O6IgeuZ/ujbjY=
-----END RSA PRIVATE KEY-----

18
kfBf3eYk5BPBRzwjqutbbfE887SVc5Yd



20
GbKksEFF4yrVs6il55v6gwY5aVje5f0j

run nc -lvp 6666 &

& lets you do stuff because it runs command in the background

run ./suconnect 6666 &
run jobs

run fg %1

So listen on a port, then connect to that port, then have the connection that was listening send a line of text


21
gE269g2h3mw3pwgrj0Ha9Uoqen1c9DGr




22
less the script to look at it (cronjob23.sh)
less /usr/bin/...
copy user and write

I am userbandit23 | md5sum

echo I am user bandit23 | md5sum

cat /tmp/md5 output sum, that should be the file where the password is saved
less that file


23
cat the script to see whats running in it
for all the files in the current directory, if it's not . or .., echo handling 
that file, give a timeout, which runs it, waits for a certain amount of time
(9 seconds) for it to run. Then removes the file and finishes

So we need to create a script then put it in that directory

we can only make directories in the /tmp
So mkdir /tmp/dirname
nano a new file (pwd.sh)

#!/bin/bash
cat/etc/bandit_pass/bandit24

not currently executable if you look at permissions on it.
chmod 777 pwd.sh to make it executable

cp pwd.sh /tmp/dirname /var/spool/bandit24
This won't work. Instead we need to send the output to a file

so change file to say

cat /etc/bandit_pass/bandit24 > /tmp/dirname/password

script won't create file, so create file in directory
touch password (creates file)

ls -al to check the file is there
chmod 777 password to make the file writable

now copy that file with the same command used earlier
cat password
Then you get the password

remove directory you created
rm -r /tmp/dirname

24

write a bash script

#!/bin/bash

for i in $(python -c "for i in range(10): print(i)")
do
	for j in $(python -c "for i in range(10): print(i)")
	do 
		for k in $(python -c "for i in range(10): print(i)")
		do
			for l in $(python -c "for i in range(10): print(i)")
			do 
				echo (insert password here) $i$j$k$l >> password
			done
		done
	done
done
(need to feed password and guessed 4 digit pin. Redirect output to a file)

chmod 777 script
run the script in the terminal


cat password | nc localhost 30002 > password

cat password | sort | uniq -u (prints the unique line which should be only one with password)

OR you can do

for i in {0000..9999}; do echo (insert password) $i; done | nc localhost 30002


25


31
56a9bf19c63d650ce78e6ec0354ee45e

